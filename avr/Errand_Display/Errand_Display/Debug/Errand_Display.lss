
Errand_Display.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000244  00800100  00000606  0000067a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000606  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000008be  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008f0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e0  00000000  00000000  00000930  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f6f  00000000  00000000  00000a10  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009e8  00000000  00000000  0000197f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000708  00000000  00000000  00002367  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001dc  00000000  00000000  00002a70  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004f8  00000000  00000000  00002c4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000062a  00000000  00000000  00003144  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e0  00000000  00000000  0000376e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 24 01 	jmp	0x248	; 0x248 <__ctors_end>
   4:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
   8:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
   c:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
  10:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
  14:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
  18:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
  1c:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
  20:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
  24:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
  28:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
  2c:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
  30:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
  34:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
  38:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
  3c:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
  40:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
  44:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
  48:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
  4c:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
  50:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
  54:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
  58:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
  5c:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
  60:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
  64:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	00 00       	nop
  6a:	00 00       	nop
  6c:	00 00       	nop
  6e:	00 5f       	subi	r16, 0xF0	; 240
  70:	00 00       	nop
  72:	00 07       	cpc	r16, r16
  74:	00 07       	cpc	r16, r16
  76:	00 14       	cp	r0, r0
  78:	7f 14       	cp	r7, r15
  7a:	7f 14       	cp	r7, r15
  7c:	24 2a       	or	r2, r20
  7e:	7f 2a       	or	r7, r31
  80:	12 23       	and	r17, r18
  82:	13 08       	sbc	r1, r3
  84:	64 62       	ori	r22, 0x24	; 36
  86:	36 49       	sbci	r19, 0x96	; 150
  88:	55 22       	and	r5, r21
  8a:	50 00       	.word	0x0050	; ????
  8c:	05 03       	mulsu	r16, r21
  8e:	00 00       	nop
  90:	00 1c       	adc	r0, r0
  92:	22 41       	sbci	r18, 0x12	; 18
  94:	00 00       	nop
  96:	41 22       	and	r4, r17
  98:	1c 00       	.word	0x001c	; ????
  9a:	14 08       	sbc	r1, r4
  9c:	3e 08       	sbc	r3, r14
  9e:	14 08       	sbc	r1, r4
  a0:	08 3e       	cpi	r16, 0xE8	; 232
  a2:	08 08       	sbc	r0, r8
  a4:	00 50       	subi	r16, 0x00	; 0
  a6:	30 00       	.word	0x0030	; ????
  a8:	00 08       	sbc	r0, r0
  aa:	08 08       	sbc	r0, r8
  ac:	08 08       	sbc	r0, r8
  ae:	00 60       	ori	r16, 0x00	; 0
  b0:	60 00       	.word	0x0060	; ????
  b2:	00 20       	and	r0, r0
  b4:	10 08       	sbc	r1, r0
  b6:	04 02       	muls	r16, r20
  b8:	3e 51       	subi	r19, 0x1E	; 30
  ba:	49 45       	sbci	r20, 0x59	; 89
  bc:	3e 00       	.word	0x003e	; ????
  be:	42 7f       	andi	r20, 0xF2	; 242
  c0:	40 00       	.word	0x0040	; ????
  c2:	42 61       	ori	r20, 0x12	; 18
  c4:	51 49       	sbci	r21, 0x91	; 145
  c6:	46 21       	and	r20, r6
  c8:	41 45       	sbci	r20, 0x51	; 81
  ca:	4b 31       	cpi	r20, 0x1B	; 27
  cc:	18 14       	cp	r1, r8
  ce:	12 7f       	andi	r17, 0xF2	; 242
  d0:	10 27       	eor	r17, r16
  d2:	45 45       	sbci	r20, 0x55	; 85
  d4:	45 39       	cpi	r20, 0x95	; 149
  d6:	3c 4a       	sbci	r19, 0xAC	; 172
  d8:	49 49       	sbci	r20, 0x99	; 153
  da:	30 01       	movw	r6, r0
  dc:	71 09       	sbc	r23, r1
  de:	05 03       	mulsu	r16, r21
  e0:	36 49       	sbci	r19, 0x96	; 150
  e2:	49 49       	sbci	r20, 0x99	; 153
  e4:	36 06       	cpc	r3, r22
  e6:	49 49       	sbci	r20, 0x99	; 153
  e8:	29 1e       	adc	r2, r25
  ea:	00 36       	cpi	r16, 0x60	; 96
  ec:	36 00       	.word	0x0036	; ????
  ee:	00 00       	nop
  f0:	56 36       	cpi	r21, 0x66	; 102
  f2:	00 00       	nop
  f4:	08 14       	cp	r0, r8
  f6:	22 41       	sbci	r18, 0x12	; 18
  f8:	00 14       	cp	r0, r0
  fa:	14 14       	cp	r1, r4
  fc:	14 14       	cp	r1, r4
  fe:	00 41       	sbci	r16, 0x10	; 16
 100:	22 14       	cp	r2, r2
 102:	08 02       	muls	r16, r24
 104:	01 51       	subi	r16, 0x11	; 17
 106:	09 06       	cpc	r0, r25
 108:	32 49       	sbci	r19, 0x92	; 146
 10a:	79 41       	sbci	r23, 0x19	; 25
 10c:	3e 7e       	andi	r19, 0xEE	; 238
 10e:	11 11       	cpse	r17, r1
 110:	11 7e       	andi	r17, 0xE1	; 225
 112:	7f 49       	sbci	r23, 0x9F	; 159
 114:	49 49       	sbci	r20, 0x99	; 153
 116:	36 3e       	cpi	r19, 0xE6	; 230
 118:	41 41       	sbci	r20, 0x11	; 17
 11a:	41 22       	and	r4, r17
 11c:	7f 41       	sbci	r23, 0x1F	; 31
 11e:	41 22       	and	r4, r17
 120:	1c 7f       	andi	r17, 0xFC	; 252
 122:	49 49       	sbci	r20, 0x99	; 153
 124:	49 41       	sbci	r20, 0x19	; 25
 126:	7f 09       	sbc	r23, r15
 128:	09 09       	sbc	r16, r9
 12a:	01 3e       	cpi	r16, 0xE1	; 225
 12c:	41 49       	sbci	r20, 0x91	; 145
 12e:	49 7a       	andi	r20, 0xA9	; 169
 130:	7f 08       	sbc	r7, r15
 132:	08 08       	sbc	r0, r8
 134:	7f 00       	.word	0x007f	; ????
 136:	41 7f       	andi	r20, 0xF1	; 241
 138:	41 00       	.word	0x0041	; ????
 13a:	20 40       	sbci	r18, 0x00	; 0
 13c:	41 3f       	cpi	r20, 0xF1	; 241
 13e:	01 7f       	andi	r16, 0xF1	; 241
 140:	08 14       	cp	r0, r8
 142:	22 41       	sbci	r18, 0x12	; 18
 144:	7f 40       	sbci	r23, 0x0F	; 15
 146:	40 40       	sbci	r20, 0x00	; 0
 148:	40 7f       	andi	r20, 0xF0	; 240
 14a:	02 0c       	add	r0, r2
 14c:	02 7f       	andi	r16, 0xF2	; 242
 14e:	7f 04       	cpc	r7, r15
 150:	08 10       	cpse	r0, r8
 152:	7f 3e       	cpi	r23, 0xEF	; 239
 154:	41 41       	sbci	r20, 0x11	; 17
 156:	41 3e       	cpi	r20, 0xE1	; 225
 158:	7f 09       	sbc	r23, r15
 15a:	09 09       	sbc	r16, r9
 15c:	06 3e       	cpi	r16, 0xE6	; 230
 15e:	41 51       	subi	r20, 0x11	; 17
 160:	21 5e       	subi	r18, 0xE1	; 225
 162:	7f 09       	sbc	r23, r15
 164:	19 29       	or	r17, r9
 166:	46 46       	sbci	r20, 0x66	; 102
 168:	49 49       	sbci	r20, 0x99	; 153
 16a:	49 31       	cpi	r20, 0x19	; 25
 16c:	01 01       	movw	r0, r2
 16e:	7f 01       	movw	r14, r30
 170:	01 3f       	cpi	r16, 0xF1	; 241
 172:	40 40       	sbci	r20, 0x00	; 0
 174:	40 3f       	cpi	r20, 0xF0	; 240
 176:	1f 20       	and	r1, r15
 178:	40 20       	and	r4, r0
 17a:	1f 3f       	cpi	r17, 0xFF	; 255
 17c:	40 38       	cpi	r20, 0x80	; 128
 17e:	40 3f       	cpi	r20, 0xF0	; 240
 180:	63 14       	cp	r6, r3
 182:	08 14       	cp	r0, r8
 184:	63 07       	cpc	r22, r19
 186:	08 70       	andi	r16, 0x08	; 8
 188:	08 07       	cpc	r16, r24
 18a:	61 51       	subi	r22, 0x11	; 17
 18c:	49 45       	sbci	r20, 0x59	; 89
 18e:	43 00       	.word	0x0043	; ????
 190:	7f 41       	sbci	r23, 0x1F	; 31
 192:	41 00       	.word	0x0041	; ????
 194:	02 04       	cpc	r0, r2
 196:	08 10       	cpse	r0, r8
 198:	20 00       	.word	0x0020	; ????
 19a:	41 41       	sbci	r20, 0x11	; 17
 19c:	7f 00       	.word	0x007f	; ????
 19e:	04 02       	muls	r16, r20
 1a0:	01 02       	muls	r16, r17
 1a2:	04 40       	sbci	r16, 0x04	; 4
 1a4:	40 40       	sbci	r20, 0x00	; 0
 1a6:	40 40       	sbci	r20, 0x00	; 0
 1a8:	00 01       	movw	r0, r0
 1aa:	02 04       	cpc	r0, r2
 1ac:	00 20       	and	r0, r0
 1ae:	54 54       	subi	r21, 0x44	; 68
 1b0:	54 78       	andi	r21, 0x84	; 132
 1b2:	7f 48       	sbci	r23, 0x8F	; 143
 1b4:	44 44       	sbci	r20, 0x44	; 68
 1b6:	38 38       	cpi	r19, 0x88	; 136
 1b8:	44 44       	sbci	r20, 0x44	; 68
 1ba:	44 20       	and	r4, r4
 1bc:	38 44       	sbci	r19, 0x48	; 72
 1be:	44 48       	sbci	r20, 0x84	; 132
 1c0:	7f 38       	cpi	r23, 0x8F	; 143
 1c2:	54 54       	subi	r21, 0x44	; 68
 1c4:	54 18       	sub	r5, r4
 1c6:	08 7e       	andi	r16, 0xE8	; 232
 1c8:	09 01       	movw	r0, r18
 1ca:	02 0c       	add	r0, r2
 1cc:	52 52       	subi	r21, 0x22	; 34
 1ce:	52 3e       	cpi	r21, 0xE2	; 226
 1d0:	7f 08       	sbc	r7, r15
 1d2:	04 04       	cpc	r0, r4
 1d4:	78 00       	.word	0x0078	; ????
 1d6:	44 7d       	andi	r20, 0xD4	; 212
 1d8:	40 00       	.word	0x0040	; ????
 1da:	20 40       	sbci	r18, 0x00	; 0
 1dc:	44 3d       	cpi	r20, 0xD4	; 212
 1de:	00 7f       	andi	r16, 0xF0	; 240
 1e0:	10 28       	or	r1, r0
 1e2:	44 00       	.word	0x0044	; ????
 1e4:	00 41       	sbci	r16, 0x10	; 16
 1e6:	7f 40       	sbci	r23, 0x0F	; 15
 1e8:	00 7c       	andi	r16, 0xC0	; 192
 1ea:	04 18       	sub	r0, r4
 1ec:	04 78       	andi	r16, 0x84	; 132
 1ee:	7c 08       	sbc	r7, r12
 1f0:	04 04       	cpc	r0, r4
 1f2:	78 38       	cpi	r23, 0x88	; 136
 1f4:	44 44       	sbci	r20, 0x44	; 68
 1f6:	44 38       	cpi	r20, 0x84	; 132
 1f8:	7c 14       	cp	r7, r12
 1fa:	14 14       	cp	r1, r4
 1fc:	08 08       	sbc	r0, r8
 1fe:	14 14       	cp	r1, r4
 200:	18 7c       	andi	r17, 0xC8	; 200
 202:	7c 08       	sbc	r7, r12
 204:	04 04       	cpc	r0, r4
 206:	08 48       	sbci	r16, 0x88	; 136
 208:	54 54       	subi	r21, 0x44	; 68
 20a:	54 20       	and	r5, r4
 20c:	04 3f       	cpi	r16, 0xF4	; 244
 20e:	44 40       	sbci	r20, 0x04	; 4
 210:	20 3c       	cpi	r18, 0xC0	; 192
 212:	40 40       	sbci	r20, 0x00	; 0
 214:	20 7c       	andi	r18, 0xC0	; 192
 216:	1c 20       	and	r1, r12
 218:	40 20       	and	r4, r0
 21a:	1c 3c       	cpi	r17, 0xCC	; 204
 21c:	40 30       	cpi	r20, 0x00	; 0
 21e:	40 3c       	cpi	r20, 0xC0	; 192
 220:	44 28       	or	r4, r4
 222:	10 28       	or	r1, r0
 224:	44 0c       	add	r4, r4
 226:	50 50       	subi	r21, 0x00	; 0
 228:	50 3c       	cpi	r21, 0xC0	; 192
 22a:	44 64       	ori	r20, 0x44	; 68
 22c:	54 4c       	sbci	r21, 0xC4	; 196
 22e:	44 00       	.word	0x0044	; ????
 230:	08 36       	cpi	r16, 0x68	; 104
 232:	41 00       	.word	0x0041	; ????
 234:	00 00       	nop
 236:	7f 00       	.word	0x007f	; ????
 238:	00 00       	nop
 23a:	41 36       	cpi	r20, 0x61	; 97
 23c:	08 00       	.word	0x0008	; ????
 23e:	10 08       	sbc	r1, r0
 240:	08 10       	cpse	r0, r8
 242:	08 78       	andi	r16, 0x88	; 136
 244:	46 41       	sbci	r20, 0x16	; 22
 246:	46 78       	andi	r20, 0x86	; 134

00000248 <__ctors_end>:
 248:	11 24       	eor	r1, r1
 24a:	1f be       	out	0x3f, r1	; 63
 24c:	cf ef       	ldi	r28, 0xFF	; 255
 24e:	d8 e0       	ldi	r29, 0x08	; 8
 250:	de bf       	out	0x3e, r29	; 62
 252:	cd bf       	out	0x3d, r28	; 61

00000254 <__do_copy_data>:
 254:	13 e0       	ldi	r17, 0x03	; 3
 256:	a0 e0       	ldi	r26, 0x00	; 0
 258:	b1 e0       	ldi	r27, 0x01	; 1
 25a:	e6 e0       	ldi	r30, 0x06	; 6
 25c:	f6 e0       	ldi	r31, 0x06	; 6
 25e:	02 c0       	rjmp	.+4      	; 0x264 <__do_copy_data+0x10>
 260:	05 90       	lpm	r0, Z+
 262:	0d 92       	st	X+, r0
 264:	a4 34       	cpi	r26, 0x44	; 68
 266:	b1 07       	cpc	r27, r17
 268:	d9 f7       	brne	.-10     	; 0x260 <__do_copy_data+0xc>
 26a:	0e 94 3b 01 	call	0x276	; 0x276 <main>
 26e:	0c 94 01 03 	jmp	0x602	; 0x602 <_exit>

00000272 <__bad_interrupt>:
 272:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000276 <main>:
#include "spi.h"
#include "nokia_5110.h"


int main(void)
{
 276:	cf 93       	push	r28
 278:	df 93       	push	r29
 27a:	cd b7       	in	r28, 0x3d	; 61
 27c:	de b7       	in	r29, 0x3e	; 62
 27e:	cb 54       	subi	r28, 0x4B	; 75
 280:	d1 09       	sbc	r29, r1
 282:	0f b6       	in	r0, 0x3f	; 63
 284:	f8 94       	cli
 286:	de bf       	out	0x3e, r29	; 62
 288:	0f be       	out	0x3f, r0	; 63
 28a:	cd bf       	out	0x3d, r28	; 61
	char test[5][15] = {"Trash: Vincent", "Dishes: Chris", "Vac: Quin", "Cook: Mick", "Idle: Sarah"};
 28c:	8b e4       	ldi	r24, 0x4B	; 75
 28e:	e9 ef       	ldi	r30, 0xF9	; 249
 290:	f2 e0       	ldi	r31, 0x02	; 2
 292:	8e 01       	movw	r16, r28
 294:	0f 5f       	subi	r16, 0xFF	; 255
 296:	1f 4f       	sbci	r17, 0xFF	; 255
 298:	d8 01       	movw	r26, r16
 29a:	01 90       	ld	r0, Z+
 29c:	0d 92       	st	X+, r0
 29e:	8a 95       	dec	r24
 2a0:	e1 f7       	brne	.-8      	; 0x29a <main+0x24>
	spi__init();	
 2a2:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <spi__init>
	nokia__init();
 2a6:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <nokia__init>
	//nokia__str(test, 16, 0, 0);
	//nokia__update();
	nokia__cursor_origin();
 2aa:	0e 94 bd 01 	call	0x37a	; 0x37a <nokia__cursor_origin>
	nokia__str(test[0], strlen(test[0]), 0, 0);
 2ae:	f8 01       	movw	r30, r16
 2b0:	01 90       	ld	r0, Z+
 2b2:	00 20       	and	r0, r0
 2b4:	e9 f7       	brne	.-6      	; 0x2b0 <main+0x3a>
 2b6:	31 97       	sbiw	r30, 0x01	; 1
 2b8:	bf 01       	movw	r22, r30
 2ba:	60 1b       	sub	r22, r16
 2bc:	71 0b       	sbc	r23, r17
 2be:	20 e0       	ldi	r18, 0x00	; 0
 2c0:	40 e0       	ldi	r20, 0x00	; 0
 2c2:	c8 01       	movw	r24, r16
 2c4:	0e 94 c4 02 	call	0x588	; 0x588 <nokia__str>
	nokia__str(test[1], strlen(test[1]), 0, 8);
 2c8:	ce 01       	movw	r24, r28
 2ca:	40 96       	adiw	r24, 0x10	; 16
 2cc:	fc 01       	movw	r30, r24
 2ce:	01 90       	ld	r0, Z+
 2d0:	00 20       	and	r0, r0
 2d2:	e9 f7       	brne	.-6      	; 0x2ce <main+0x58>
 2d4:	31 97       	sbiw	r30, 0x01	; 1
 2d6:	bf 01       	movw	r22, r30
 2d8:	68 1b       	sub	r22, r24
 2da:	79 0b       	sbc	r23, r25
 2dc:	28 e0       	ldi	r18, 0x08	; 8
 2de:	40 e0       	ldi	r20, 0x00	; 0
 2e0:	0e 94 c4 02 	call	0x588	; 0x588 <nokia__str>
	nokia__str(test[2], strlen(test[2]), 0, 16);
 2e4:	ce 01       	movw	r24, r28
 2e6:	4f 96       	adiw	r24, 0x1f	; 31
 2e8:	fc 01       	movw	r30, r24
 2ea:	01 90       	ld	r0, Z+
 2ec:	00 20       	and	r0, r0
 2ee:	e9 f7       	brne	.-6      	; 0x2ea <main+0x74>
 2f0:	31 97       	sbiw	r30, 0x01	; 1
 2f2:	bf 01       	movw	r22, r30
 2f4:	68 1b       	sub	r22, r24
 2f6:	79 0b       	sbc	r23, r25
 2f8:	20 e1       	ldi	r18, 0x10	; 16
 2fa:	40 e0       	ldi	r20, 0x00	; 0
 2fc:	0e 94 c4 02 	call	0x588	; 0x588 <nokia__str>
	nokia__str(test[3], strlen(test[3]), 0, 24);
 300:	ce 01       	movw	r24, r28
 302:	8e 96       	adiw	r24, 0x2e	; 46
 304:	fc 01       	movw	r30, r24
 306:	01 90       	ld	r0, Z+
 308:	00 20       	and	r0, r0
 30a:	e9 f7       	brne	.-6      	; 0x306 <main+0x90>
 30c:	31 97       	sbiw	r30, 0x01	; 1
 30e:	bf 01       	movw	r22, r30
 310:	68 1b       	sub	r22, r24
 312:	79 0b       	sbc	r23, r25
 314:	28 e1       	ldi	r18, 0x18	; 24
 316:	40 e0       	ldi	r20, 0x00	; 0
 318:	0e 94 c4 02 	call	0x588	; 0x588 <nokia__str>
	nokia__str(test[4], strlen(test[4]), 0, 32);
 31c:	ce 01       	movw	r24, r28
 31e:	cd 96       	adiw	r24, 0x3d	; 61
 320:	fc 01       	movw	r30, r24
 322:	01 90       	ld	r0, Z+
 324:	00 20       	and	r0, r0
 326:	e9 f7       	brne	.-6      	; 0x322 <main+0xac>
 328:	31 97       	sbiw	r30, 0x01	; 1
 32a:	bf 01       	movw	r22, r30
 32c:	68 1b       	sub	r22, r24
 32e:	79 0b       	sbc	r23, r25
 330:	20 e2       	ldi	r18, 0x20	; 32
 332:	40 e0       	ldi	r20, 0x00	; 0
 334:	0e 94 c4 02 	call	0x588	; 0x588 <nokia__str>
	//nokia__scale(2);
	//nokia__char('B', 20, 0);
	//nokia__scale(3);
	//nokia__char('C', 40, 0);
	//nokia__fill();
	nokia__update();
 338:	0e 94 c2 01 	call	0x384	; 0x384 <nokia__update>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 33c:	2f ef       	ldi	r18, 0xFF	; 255
 33e:	83 ed       	ldi	r24, 0xD3	; 211
 340:	90 e3       	ldi	r25, 0x30	; 48
 342:	21 50       	subi	r18, 0x01	; 1
 344:	80 40       	sbci	r24, 0x00	; 0
 346:	90 40       	sbci	r25, 0x00	; 0
 348:	e1 f7       	brne	.-8      	; 0x342 <main+0xcc>
 34a:	00 c0       	rjmp	.+0      	; 0x34c <main+0xd6>
 34c:	00 00       	nop
 34e:	f6 cf       	rjmp	.-20     	; 0x33c <main+0xc6>

00000350 <nokia__cmd>:
		}
	}
}

void nokia__scale(uint8_t sc) {
	scale = sc;
 350:	5d 98       	cbi	0x0b, 5	; 11
 352:	2a 98       	cbi	0x05, 2	; 5
 354:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <spi__write>
 358:	2a 9a       	sbi	0x05, 2	; 5
 35a:	08 95       	ret

0000035c <nokia__data>:
 35c:	5d 9a       	sbi	0x0b, 5	; 11
 35e:	2a 98       	cbi	0x05, 2	; 5
 360:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <spi__write>
 364:	2a 9a       	sbi	0x05, 2	; 5
 366:	08 95       	ret

00000368 <nokia__cursor>:
 368:	cf 93       	push	r28
 36a:	c6 2f       	mov	r28, r22
 36c:	0e 94 a8 01 	call	0x350	; 0x350 <nokia__cmd>
 370:	8c 2f       	mov	r24, r28
 372:	0e 94 a8 01 	call	0x350	; 0x350 <nokia__cmd>
 376:	cf 91       	pop	r28
 378:	08 95       	ret

0000037a <nokia__cursor_origin>:
 37a:	60 e0       	ldi	r22, 0x00	; 0
 37c:	80 e0       	ldi	r24, 0x00	; 0
 37e:	0e 94 b4 01 	call	0x368	; 0x368 <nokia__cursor>
 382:	08 95       	ret

00000384 <nokia__update>:
 384:	0f 93       	push	r16
 386:	1f 93       	push	r17
 388:	cf 93       	push	r28
 38a:	df 93       	push	r29
 38c:	0e 94 bd 01 	call	0x37a	; 0x37a <nokia__cursor_origin>
 390:	c1 e0       	ldi	r28, 0x01	; 1
 392:	d1 e0       	ldi	r29, 0x01	; 1
 394:	09 ef       	ldi	r16, 0xF9	; 249
 396:	12 e0       	ldi	r17, 0x02	; 2
 398:	89 91       	ld	r24, Y+
 39a:	0e 94 ae 01 	call	0x35c	; 0x35c <nokia__data>
 39e:	c0 17       	cp	r28, r16
 3a0:	d1 07       	cpc	r29, r17
 3a2:	d1 f7       	brne	.-12     	; 0x398 <nokia__update+0x14>
 3a4:	df 91       	pop	r29
 3a6:	cf 91       	pop	r28
 3a8:	1f 91       	pop	r17
 3aa:	0f 91       	pop	r16
 3ac:	08 95       	ret

000003ae <nokia__wipe>:
 3ae:	e1 e0       	ldi	r30, 0x01	; 1
 3b0:	f1 e0       	ldi	r31, 0x01	; 1
 3b2:	89 ef       	ldi	r24, 0xF9	; 249
 3b4:	92 e0       	ldi	r25, 0x02	; 2
 3b6:	11 92       	st	Z+, r1
 3b8:	e8 17       	cp	r30, r24
 3ba:	f9 07       	cpc	r31, r25
 3bc:	e1 f7       	brne	.-8      	; 0x3b6 <nokia__wipe+0x8>
 3be:	08 95       	ret

000003c0 <nokia__init>:
 3c0:	80 e6       	ldi	r24, 0x60	; 96
 3c2:	8a b9       	out	0x0a, r24	; 10
 3c4:	5e 9a       	sbi	0x0b, 6	; 11
 3c6:	2a 9a       	sbi	0x05, 2	; 5
 3c8:	8f e3       	ldi	r24, 0x3F	; 63
 3ca:	9c e9       	ldi	r25, 0x9C	; 156
 3cc:	01 97       	sbiw	r24, 0x01	; 1
 3ce:	f1 f7       	brne	.-4      	; 0x3cc <nokia__init+0xc>
 3d0:	00 c0       	rjmp	.+0      	; 0x3d2 <nokia__init+0x12>
 3d2:	00 00       	nop
 3d4:	5e 98       	cbi	0x0b, 6	; 11
 3d6:	9f ef       	ldi	r25, 0xFF	; 255
 3d8:	2a e6       	ldi	r18, 0x6A	; 106
 3da:	83 e0       	ldi	r24, 0x03	; 3
 3dc:	91 50       	subi	r25, 0x01	; 1
 3de:	20 40       	sbci	r18, 0x00	; 0
 3e0:	80 40       	sbci	r24, 0x00	; 0
 3e2:	e1 f7       	brne	.-8      	; 0x3dc <nokia__init+0x1c>
 3e4:	00 c0       	rjmp	.+0      	; 0x3e6 <nokia__init+0x26>
 3e6:	00 00       	nop
 3e8:	5e 9a       	sbi	0x0b, 6	; 11
 3ea:	2a 98       	cbi	0x05, 2	; 5
 3ec:	81 e2       	ldi	r24, 0x21	; 33
 3ee:	0e 94 a8 01 	call	0x350	; 0x350 <nokia__cmd>
 3f2:	86 e0       	ldi	r24, 0x06	; 6
 3f4:	0e 94 a8 01 	call	0x350	; 0x350 <nokia__cmd>
 3f8:	83 e1       	ldi	r24, 0x13	; 19
 3fa:	0e 94 a8 01 	call	0x350	; 0x350 <nokia__cmd>
 3fe:	82 ec       	ldi	r24, 0xC2	; 194
 400:	0e 94 a8 01 	call	0x350	; 0x350 <nokia__cmd>
 404:	80 e2       	ldi	r24, 0x20	; 32
 406:	0e 94 a8 01 	call	0x350	; 0x350 <nokia__cmd>
 40a:	89 e0       	ldi	r24, 0x09	; 9
 40c:	0e 94 a8 01 	call	0x350	; 0x350 <nokia__cmd>
 410:	80 e8       	ldi	r24, 0x80	; 128
 412:	0e 94 a8 01 	call	0x350	; 0x350 <nokia__cmd>
 416:	80 e4       	ldi	r24, 0x40	; 64
 418:	0e 94 a8 01 	call	0x350	; 0x350 <nokia__cmd>
 41c:	0e 94 d7 01 	call	0x3ae	; 0x3ae <nokia__wipe>
 420:	88 e0       	ldi	r24, 0x08	; 8
 422:	0e 94 a8 01 	call	0x350	; 0x350 <nokia__cmd>
 426:	8c e0       	ldi	r24, 0x0C	; 12
 428:	0e 94 a8 01 	call	0x350	; 0x350 <nokia__cmd>
 42c:	08 95       	ret

0000042e <nokia__pixel>:
 42e:	84 35       	cpi	r24, 0x54	; 84
 430:	a0 f5       	brcc	.+104    	; 0x49a <nokia__pixel+0x6c>
 432:	60 33       	cpi	r22, 0x30	; 48
 434:	90 f5       	brcc	.+100    	; 0x49a <nokia__pixel+0x6c>
 436:	26 2f       	mov	r18, r22
 438:	27 70       	andi	r18, 0x07	; 7
 43a:	44 23       	and	r20, r20
 43c:	b9 f0       	breq	.+46     	; 0x46c <nokia__pixel+0x3e>
 43e:	66 95       	lsr	r22
 440:	66 95       	lsr	r22
 442:	66 95       	lsr	r22
 444:	e8 2f       	mov	r30, r24
 446:	f0 e0       	ldi	r31, 0x00	; 0
 448:	84 e5       	ldi	r24, 0x54	; 84
 44a:	68 9f       	mul	r22, r24
 44c:	e0 0d       	add	r30, r0
 44e:	f1 1d       	adc	r31, r1
 450:	11 24       	eor	r1, r1
 452:	ef 5f       	subi	r30, 0xFF	; 255
 454:	fe 4f       	sbci	r31, 0xFE	; 254
 456:	81 e0       	ldi	r24, 0x01	; 1
 458:	90 e0       	ldi	r25, 0x00	; 0
 45a:	02 c0       	rjmp	.+4      	; 0x460 <nokia__pixel+0x32>
 45c:	88 0f       	add	r24, r24
 45e:	99 1f       	adc	r25, r25
 460:	2a 95       	dec	r18
 462:	e2 f7       	brpl	.-8      	; 0x45c <nokia__pixel+0x2e>
 464:	90 81       	ld	r25, Z
 466:	89 2b       	or	r24, r25
 468:	80 83       	st	Z, r24
 46a:	08 95       	ret
 46c:	66 95       	lsr	r22
 46e:	66 95       	lsr	r22
 470:	66 95       	lsr	r22
 472:	e8 2f       	mov	r30, r24
 474:	f0 e0       	ldi	r31, 0x00	; 0
 476:	84 e5       	ldi	r24, 0x54	; 84
 478:	68 9f       	mul	r22, r24
 47a:	e0 0d       	add	r30, r0
 47c:	f1 1d       	adc	r31, r1
 47e:	11 24       	eor	r1, r1
 480:	ef 5f       	subi	r30, 0xFF	; 255
 482:	fe 4f       	sbci	r31, 0xFE	; 254
 484:	81 e0       	ldi	r24, 0x01	; 1
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	02 c0       	rjmp	.+4      	; 0x48e <nokia__pixel+0x60>
 48a:	88 0f       	add	r24, r24
 48c:	99 1f       	adc	r25, r25
 48e:	2a 95       	dec	r18
 490:	e2 f7       	brpl	.-8      	; 0x48a <nokia__pixel+0x5c>
 492:	80 95       	com	r24
 494:	90 81       	ld	r25, Z
 496:	89 23       	and	r24, r25
 498:	80 83       	st	Z, r24
 49a:	08 95       	ret

0000049c <nokia__char>:
}


void nokia__char(char c, uint8_t x, uint8_t y) {
 49c:	df 92       	push	r13
 49e:	ef 92       	push	r14
 4a0:	ff 92       	push	r15
 4a2:	0f 93       	push	r16
 4a4:	1f 93       	push	r17
 4a6:	cf 93       	push	r28
 4a8:	df 93       	push	r29
	//char col;
	for (uint8_t i = 0; i < 5*scale; ++i) {
 4aa:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 4ae:	30 e0       	ldi	r19, 0x00	; 0
 4b0:	f9 01       	movw	r30, r18
 4b2:	ee 0f       	add	r30, r30
 4b4:	ff 1f       	adc	r31, r31
 4b6:	ee 0f       	add	r30, r30
 4b8:	ff 1f       	adc	r31, r31
 4ba:	2e 0f       	add	r18, r30
 4bc:	3f 1f       	adc	r19, r31
 4be:	12 16       	cp	r1, r18
 4c0:	13 06       	cpc	r1, r19
 4c2:	0c f4       	brge	.+2      	; 0x4c6 <nokia__char+0x2a>
 4c4:	46 c0       	rjmp	.+140    	; 0x552 <nokia__char+0xb6>
 4c6:	58 c0       	rjmp	.+176    	; 0x578 <nokia__char+0xdc>
		//col = ASCII[c - 0x20][i];
		for (uint8_t j = 0; j < 8*scale; ++j) {
 4c8:	0d 2d       	mov	r16, r13
 4ca:	10 e0       	ldi	r17, 0x00	; 0
			if (pgm_read_byte(&ASCII[c - 0x20][i/scale]) & (0x01 << j/scale)) {
 4cc:	8f 2d       	mov	r24, r15
 4ce:	62 2f       	mov	r22, r18
 4d0:	0e 94 f5 02 	call	0x5ea	; 0x5ea <__udivmodqi4>
 4d4:	fe 01       	movw	r30, r28
 4d6:	e8 0f       	add	r30, r24
 4d8:	f1 1d       	adc	r31, r1
 4da:	e8 59       	subi	r30, 0x98	; 152
 4dc:	ff 4f       	sbci	r31, 0xFF	; 255
 4de:	e4 91       	lpm	r30, Z
 4e0:	f0 e0       	ldi	r31, 0x00	; 0
 4e2:	81 2f       	mov	r24, r17
 4e4:	0e 94 f5 02 	call	0x5ea	; 0x5ea <__udivmodqi4>
 4e8:	02 c0       	rjmp	.+4      	; 0x4ee <nokia__char+0x52>
 4ea:	f5 95       	asr	r31
 4ec:	e7 95       	ror	r30
 4ee:	8a 95       	dec	r24
 4f0:	e2 f7       	brpl	.-8      	; 0x4ea <nokia__char+0x4e>
 4f2:	e0 ff       	sbrs	r30, 0
 4f4:	06 c0       	rjmp	.+12     	; 0x502 <nokia__char+0x66>
				nokia__pixel(x + i, y + j, BLACK);
 4f6:	41 e0       	ldi	r20, 0x01	; 1
 4f8:	60 2f       	mov	r22, r16
 4fa:	8e 2d       	mov	r24, r14
 4fc:	0e 94 17 02 	call	0x42e	; 0x42e <nokia__pixel>
 500:	05 c0       	rjmp	.+10     	; 0x50c <nokia__char+0x70>
			}
			else {
				nokia__pixel(x + i, y + j, WHITE);
 502:	40 e0       	ldi	r20, 0x00	; 0
 504:	60 2f       	mov	r22, r16
 506:	8e 2d       	mov	r24, r14
 508:	0e 94 17 02 	call	0x42e	; 0x42e <nokia__pixel>

void nokia__char(char c, uint8_t x, uint8_t y) {
	//char col;
	for (uint8_t i = 0; i < 5*scale; ++i) {
		//col = ASCII[c - 0x20][i];
		for (uint8_t j = 0; j < 8*scale; ++j) {
 50c:	1f 5f       	subi	r17, 0xFF	; 255
 50e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 512:	0f 5f       	subi	r16, 0xFF	; 255
 514:	41 2f       	mov	r20, r17
 516:	50 e0       	ldi	r21, 0x00	; 0
 518:	82 2f       	mov	r24, r18
 51a:	90 e0       	ldi	r25, 0x00	; 0
 51c:	88 0f       	add	r24, r24
 51e:	99 1f       	adc	r25, r25
 520:	88 0f       	add	r24, r24
 522:	99 1f       	adc	r25, r25
 524:	88 0f       	add	r24, r24
 526:	99 1f       	adc	r25, r25
 528:	48 17       	cp	r20, r24
 52a:	59 07       	cpc	r21, r25
 52c:	7c f2       	brlt	.-98     	; 0x4cc <nokia__char+0x30>
}


void nokia__char(char c, uint8_t x, uint8_t y) {
	//char col;
	for (uint8_t i = 0; i < 5*scale; ++i) {
 52e:	f3 94       	inc	r15
 530:	e3 94       	inc	r14
 532:	2f 2d       	mov	r18, r15
 534:	30 e0       	ldi	r19, 0x00	; 0
 536:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 53a:	90 e0       	ldi	r25, 0x00	; 0
 53c:	ac 01       	movw	r20, r24
 53e:	44 0f       	add	r20, r20
 540:	55 1f       	adc	r21, r21
 542:	44 0f       	add	r20, r20
 544:	55 1f       	adc	r21, r21
 546:	84 0f       	add	r24, r20
 548:	95 1f       	adc	r25, r21
 54a:	28 17       	cp	r18, r24
 54c:	39 07       	cpc	r19, r25
 54e:	7c f0       	brlt	.+30     	; 0x56e <nokia__char+0xd2>
 550:	13 c0       	rjmp	.+38     	; 0x578 <nokia__char+0xdc>
 552:	d4 2e       	mov	r13, r20
 554:	e6 2e       	mov	r14, r22
 556:	f1 2c       	mov	r15, r1
		//col = ASCII[c - 0x20][i];
		for (uint8_t j = 0; j < 8*scale; ++j) {
			if (pgm_read_byte(&ASCII[c - 0x20][i/scale]) & (0x01 << j/scale)) {
 558:	c8 2f       	mov	r28, r24
 55a:	d0 e0       	ldi	r29, 0x00	; 0
 55c:	ce 01       	movw	r24, r28
 55e:	80 97       	sbiw	r24, 0x20	; 32
 560:	ec 01       	movw	r28, r24
 562:	cc 0f       	add	r28, r28
 564:	dd 1f       	adc	r29, r29
 566:	cc 0f       	add	r28, r28
 568:	dd 1f       	adc	r29, r29
 56a:	c8 0f       	add	r28, r24
 56c:	d9 1f       	adc	r29, r25

void nokia__char(char c, uint8_t x, uint8_t y) {
	//char col;
	for (uint8_t i = 0; i < 5*scale; ++i) {
		//col = ASCII[c - 0x20][i];
		for (uint8_t j = 0; j < 8*scale; ++j) {
 56e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 572:	21 11       	cpse	r18, r1
 574:	a9 cf       	rjmp	.-174    	; 0x4c8 <nokia__char+0x2c>
 576:	db cf       	rjmp	.-74     	; 0x52e <nokia__char+0x92>
			else {
				nokia__pixel(x + i, y + j, WHITE);
			}
		}
	}
}
 578:	df 91       	pop	r29
 57a:	cf 91       	pop	r28
 57c:	1f 91       	pop	r17
 57e:	0f 91       	pop	r16
 580:	ff 90       	pop	r15
 582:	ef 90       	pop	r14
 584:	df 90       	pop	r13
 586:	08 95       	ret

00000588 <nokia__str>:

void nokia__str(char str[], uint8_t str_size, uint8_t x, uint8_t y) {
 588:	ef 92       	push	r14
 58a:	ff 92       	push	r15
 58c:	0f 93       	push	r16
 58e:	1f 93       	push	r17
 590:	cf 93       	push	r28
 592:	df 93       	push	r29
 594:	c4 2f       	mov	r28, r20
 596:	d2 2f       	mov	r29, r18
	for (int i = 0; i < str_size; ++i) {
 598:	66 23       	and	r22, r22
 59a:	b1 f0       	breq	.+44     	; 0x5c8 <nokia__str+0x40>
 59c:	8c 01       	movw	r16, r24
 59e:	7c 01       	movw	r14, r24
 5a0:	e6 0e       	add	r14, r22
 5a2:	f1 1c       	adc	r15, r1
		nokia__char(str[i], x, y);
 5a4:	4d 2f       	mov	r20, r29
 5a6:	6c 2f       	mov	r22, r28
 5a8:	f8 01       	movw	r30, r16
 5aa:	81 91       	ld	r24, Z+
 5ac:	8f 01       	movw	r16, r30
 5ae:	0e 94 4e 02 	call	0x49c	; 0x49c <nokia__char>
		x += 5*scale + 1;
 5b2:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__data_start>
 5b6:	29 2f       	mov	r18, r25
 5b8:	22 0f       	add	r18, r18
 5ba:	22 0f       	add	r18, r18
 5bc:	92 0f       	add	r25, r18
 5be:	9f 5f       	subi	r25, 0xFF	; 255
 5c0:	c9 0f       	add	r28, r25
		}
	}
}

void nokia__str(char str[], uint8_t str_size, uint8_t x, uint8_t y) {
	for (int i = 0; i < str_size; ++i) {
 5c2:	0e 15       	cp	r16, r14
 5c4:	1f 05       	cpc	r17, r15
 5c6:	71 f7       	brne	.-36     	; 0x5a4 <nokia__str+0x1c>
		nokia__char(str[i], x, y);
		x += 5*scale + 1;
	}
}
 5c8:	df 91       	pop	r29
 5ca:	cf 91       	pop	r28
 5cc:	1f 91       	pop	r17
 5ce:	0f 91       	pop	r16
 5d0:	ff 90       	pop	r15
 5d2:	ef 90       	pop	r14
 5d4:	08 95       	ret

000005d6 <spi__init>:
	SPCR |= (1<<SPE);
}

void spi__stop(void) {
	//Disable SPI, Set SPI Enable bit to 0;
	SPCR &= ~(1<<SPE);
 5d6:	8c e2       	ldi	r24, 0x2C	; 44
 5d8:	84 b9       	out	0x04, r24	; 4
 5da:	81 e5       	ldi	r24, 0x51	; 81
 5dc:	8c bd       	out	0x2c, r24	; 44
 5de:	08 95       	ret

000005e0 <spi__write>:
}

void spi__write(uint8_t data) {
	//Load SPI data register with data
	SPDR = data;
 5e0:	8e bd       	out	0x2e, r24	; 46
	
	//PORTD &= ~(1<<CE);
	//PORTB &= ~(1<<CE);
	
	//Wait for data transmission to finish
	while (!(SPSR & (1<<SPIF)));
 5e2:	0d b4       	in	r0, 0x2d	; 45
 5e4:	07 fe       	sbrs	r0, 7
 5e6:	fd cf       	rjmp	.-6      	; 0x5e2 <spi__write+0x2>
	
	//PORTD |= (1<<CE);
	//PORTB |= (1<<CE);
}
 5e8:	08 95       	ret

000005ea <__udivmodqi4>:
 5ea:	99 1b       	sub	r25, r25
 5ec:	79 e0       	ldi	r23, 0x09	; 9
 5ee:	04 c0       	rjmp	.+8      	; 0x5f8 <__udivmodqi4_ep>

000005f0 <__udivmodqi4_loop>:
 5f0:	99 1f       	adc	r25, r25
 5f2:	96 17       	cp	r25, r22
 5f4:	08 f0       	brcs	.+2      	; 0x5f8 <__udivmodqi4_ep>
 5f6:	96 1b       	sub	r25, r22

000005f8 <__udivmodqi4_ep>:
 5f8:	88 1f       	adc	r24, r24
 5fa:	7a 95       	dec	r23
 5fc:	c9 f7       	brne	.-14     	; 0x5f0 <__udivmodqi4_loop>
 5fe:	80 95       	com	r24
 600:	08 95       	ret

00000602 <_exit>:
 602:	f8 94       	cli

00000604 <__stop_program>:
 604:	ff cf       	rjmp	.-2      	; 0x604 <__stop_program>
